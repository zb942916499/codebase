import cv2
from PIL import Image
import os
import numpy as np

def split_and_crop_images(image_folder, mask_folder, output_folder, crop_width, crop_height):
    image_files = os.listdir(image_folder)
    for image_file in image_files:
        image_path = os.path.join(image_folder, image_file)
        mask_file = image_file.replace('.jpg', '.png')
        mask_path = os.path.join(mask_folder, mask_file)

        if not os.path.isfile(mask_path):
            continue

        image = Image.open(image_path)
        mask = Image.open(mask_path)

        width, height = image.size
        print(image_file)
        for y in range(0, height, crop_height):
            for x in range(0, width, crop_width):
                box = (x, y, x + crop_width, y + crop_height)
                cropped_image = image.crop(box)
                cropped_mask = mask.crop(box)
                # print(cropped_mask)

                # 1. 找到非零元素最大外接矩形对应的图像区域
                rows, cols = np.nonzero(cropped_mask)
                if len(rows) == 0:
                    continue
                min_row, max_row = np.min(rows), np.max(rows)
                min_col, max_col = np.min(cols), np.max(cols)
                cropped_image_result = np.array(cropped_image)[min_row:max_row + 1, min_col:max_col + 1]
                # cropped_image_result.save(os.path.join(output_folder, f"{image_file}_{x}_{y}.jpg"))
                cv2.imwrite(os.path.join(output_folder, f"{image_file}_{x}_{y}.jpg"),cropped_image_result)


image_folder = "G:/zhaoben/barrier_data_0208/images/"
mask_folder = "G:/zhaoben/barrier_data_0208/barrier_data_0208_mask/"
output_folder = "G:/zhaoben/barrier_data_0208/crop_reslults/"
crop_width = 100
crop_height = 100

split_and_crop_images(image_folder, mask_folder, output_folder, crop_width, crop_height)
